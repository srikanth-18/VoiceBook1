<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="XmlFoundEndOfFile" xml:space="preserve">
    <value>fin del archivo</value>
  </data>
  <data name="UnknownFeedXml" xml:space="preserve">
    <value>El elemento con el nombre '{0}' y el espacio de nombres '{1}' no tiene un formato de fuente permitido.</value>
  </data>
  <data name="ErrorParsingDateTime" xml:space="preserve">
    <value>Error al analizar un valor de DateTime en el XML.</value>
  </data>
  <data name="ValueMustBeNonNegative" xml:space="preserve">
    <value>El valor de este argumento no puede ser negativo.</value>
  </data>
  <data name="FeedCreatedNullPerson" xml:space="preserve">
    <value>La fuente creó una persona nula.</value>
  </data>
  <data name="FeedCreatedNullItem" xml:space="preserve">
    <value>La fuente creó un elemento nulo.</value>
  </data>
  <data name="ItemLinksIgnoredOnWrite" xml:space="preserve">
    <value>Los vínculos del elemento no se serializaron como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="SeekNotSupported" xml:space="preserve">
    <value>No se admite la búsqueda en esta secuencia.</value>
  </data>
  <data name="FeedIdIgnoredOnWrite" xml:space="preserve">
    <value>El Id. de la fuente no se serializó como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="FeedFormatterDoesNotHaveFeed" xml:space="preserve">
    <value>El formateador de la fuente de la distribución se debe configurar con una fuente de distribución.</value>
  </data>
  <data name="ItemLastUpdatedTimeIgnoredOnWrite" xml:space="preserve">
    <value>La última actualización del elemento no se serializó como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="ItemContentIgnoredOnWrite" xml:space="preserve">
    <value>El contenido del elemento no se serializó como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="ItemCopyrightIgnoredOnWrite" xml:space="preserve">
    <value>El copyright del elemento no se serializó como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="XmlFoundElement" xml:space="preserve">
    <value>elemento '{0}' del espacio de nombres '{1}'</value>
  </data>
  <data name="FeedHasNonContiguousItems" xml:space="preserve">
    <value>La fuente que se va a deserializar no tiene conjuntos de elementos no contiguos. '{0}' no lo admite.</value>
  </data>
  <data name="JsonInvalidLocalNameEmpty" xml:space="preserve">
    <value>La cadena vacía no es un nombre local válido.</value>
  </data>
  <data name="FeedAuthorsIgnoredOnWrite" xml:space="preserve">
    <value>No se serializó a los autores de la fuente como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="XmlStartElementExpected" xml:space="preserve">
    <value>Se esperaba el elemento de inicio. Se encontró {0}.</value>
  </data>
  <data name="XmlFoundComment" xml:space="preserve">
    <value>comentario '{0}'</value>
  </data>
  <data name="XmlFoundNodeType" xml:space="preserve">
    <value>nodo {0}</value>
  </data>
  <data name="UnknownItemXml" xml:space="preserve">
    <value>El elemento con el nombre '{0}' y el espacio de nombres '{1}' no tiene un formato de elemento permitido.</value>
  </data>
  <data name="ItemCreatedNullPerson" xml:space="preserve">
    <value>El elemento creó una persona nula.</value>
  </data>
  <data name="ItemContributorsIgnoredOnWrite" xml:space="preserve">
    <value>Los colaboradores del elemento no se serializaron como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="FeedCreatedNullCategory" xml:space="preserve">
    <value>La fuente creó una categoría nula.</value>
  </data>
  <data name="XmlFoundText" xml:space="preserve">
    <value>texto '{0}'</value>
  </data>
  <data name="Atom10SpecRequiresTextConstruct" xml:space="preserve">
    <value>La especificación Atom10 requiere '{0}' tener uno de estos valores: "text", "html", "xhtml", no obstante, este valor está '{1}' en el documento que se está deserializando.</value>
  </data>
  <data name="UriGeneratorSchemeMustNotBeEmpty" xml:space="preserve">
    <value>El parámetro de esquema no debe estar vacío.</value>
  </data>
  <data name="UnbufferedItemsCannotBeCloned" xml:space="preserve">
    <value>Un fuente que contiene elementos que no están en el búfer (es decir, los elementos no están almacenados en una IList) no puede clonar sus elementos. Almacene en el búfer los elementos de la fuente antes de llamar a Clone en él o pasar falso al método Clone.</value>
  </data>
  <data name="ReadNotSupported" xml:space="preserve">
    <value>No se permite la lectura en esta secuencia.</value>
  </data>
  <data name="OuterElementNameNotSpecified" xml:space="preserve">
    <value>Se debe especificar el nombre del elemento externo.</value>
  </data>
  <data name="ErrorInLine" xml:space="preserve">
    <value>Error en la línea {0}, posición {1}.</value>
  </data>
  <data name="XmlBufferQuotaExceeded" xml:space="preserve">
    <value>El tamaño necesario para almacenar en búfer el contenido XML supera la cuota del búfer. La causa se puede haber producido al pasar un valor que no era suficientemente grande al parámetro maxExtensionSize al cargar las extensiones.</value>
  </data>
  <data name="ItemFormatterDoesNotHaveItem" xml:space="preserve">
    <value>El formateador del elemento de la distribución se debe configurar con un elemento de distribución.</value>
  </data>
  <data name="XmlBufferClosed" xml:space="preserve">
    <value>El objeto XmlBuffer se cerró antes de que se leyeran los datos de la Secuencia asociada.</value>
  </data>
  <data name="FeedContributorsIgnoredOnWrite" xml:space="preserve">
    <value>No se serializó a los colaboradores de la fuente como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="FeedLinksIgnoredOnWrite" xml:space="preserve">
    <value>Los vínculos de la fuente no se serializaron como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="ItemAuthorsIgnoredOnWrite" xml:space="preserve">
    <value>Los autores del elemento no se serializaron como parte de la serialización de la fuente en el formato RSS 2.0.</value>
  </data>
  <data name="ErrorParsingItem" xml:space="preserve">
    <value>Error al analizar el XML del elemento. Para obtener más información, consulte la excepción interna.</value>
  </data>
  <data name="ErrorParsingFeed" xml:space="preserve">
    <value>Error al analizar el XML de la fuente. Para obtener más información, consulte la excepción interna.</value>
  </data>
  <data name="XmlBufferInInvalidState" xml:space="preserve">
    <value>Error interno. El búfer XML no se encuentra en el estado correcto para llevar a cabo la operación.</value>
  </data>
  <data name="XmlFoundCData" xml:space="preserve">
    <value>cdata '{0}'</value>
  </data>
  <data name="UnsupportedRssVersion" xml:space="preserve">
    <value>Rss20Serializer no admite RSS versión '{0}'.</value>
  </data>
  <data name="InvalidObjectTypePassed" xml:space="preserve">
    <value>El tipo de objeto pasado como parámetro '{0}' no se deriva de {1}. Asegúrese de que el tipo de objeto pasado es del tipo {1}, o bien se deriva de {1}.</value>
  </data>
  <data name="ExtensionNameNotSpecified" xml:space="preserve">
    <value>Se debe especificar el nombre del elemento de la extensión.</value>
  </data>
  <data name="ItemCreatedNullCategory" xml:space="preserve">
    <value>El elemento creó una categoría nula.</value>
  </data>
  <data name="XmlFoundEndElement" xml:space="preserve">
    <value>elemento final '{0}' del espacio de nombres '{1}'</value>
  </data>
</root>