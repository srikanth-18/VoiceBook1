<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="XmlFoundEndOfFile" xml:space="preserve">
    <value>Dateiende</value>
  </data>
  <data name="UnknownFeedXml" xml:space="preserve">
    <value>Das Element mit dem Namen '{0}' und Namespace '{1}' ist kein zulässiges Feedformat.</value>
  </data>
  <data name="ErrorParsingDateTime" xml:space="preserve">
    <value>Fehler beim Analysieren eines DateTime-Werts im XML-Code.</value>
  </data>
  <data name="ValueMustBeNonNegative" xml:space="preserve">
    <value>Der Wert dieses Arguments darf nicht negativ sein.</value>
  </data>
  <data name="FeedCreatedNullPerson" xml:space="preserve">
    <value>Der Feed hat eine Null-Person erstellt.</value>
  </data>
  <data name="FeedCreatedNullItem" xml:space="preserve">
    <value>Der Feed hat ein Null-Element erstellt.</value>
  </data>
  <data name="ItemLinksIgnoredOnWrite" xml:space="preserve">
    <value>Die Links des Elements wurden nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="SeekNotSupported" xml:space="preserve">
    <value>Suchen wird für diesen Stream nicht unterstützt.</value>
  </data>
  <data name="FeedIdIgnoredOnWrite" xml:space="preserve">
    <value>Die ID des Feeds wurde nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="FeedFormatterDoesNotHaveFeed" xml:space="preserve">
    <value>Die Syndication-Feedformatierung muss mit einem Syndication-Feed konfiguriert sein.</value>
  </data>
  <data name="ItemLastUpdatedTimeIgnoredOnWrite" xml:space="preserve">
    <value>Die Zeit der letzten Aktualisierung des Elements wurde nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="ItemContentIgnoredOnWrite" xml:space="preserve">
    <value>Der Inhalt des Elements wurde nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="ItemCopyrightIgnoredOnWrite" xml:space="preserve">
    <value>Die Copyrights des Elements wurden nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="XmlFoundElement" xml:space="preserve">
    <value>Element "{0}" aus Namespace "{1}"</value>
  </data>
  <data name="FeedHasNonContiguousItems" xml:space="preserve">
    <value>Der zu deserialisierende Feed enthält nicht zusammenhängende Elementsätze. Dies wird von '{0}' nicht unterstützt.</value>
  </data>
  <data name="JsonInvalidLocalNameEmpty" xml:space="preserve">
    <value>Die leere Zeichenfolge ist kein gültiger lokaler Name.</value>
  </data>
  <data name="FeedAuthorsIgnoredOnWrite" xml:space="preserve">
    <value>Die Autoren des Feeds wurden nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="XmlStartElementExpected" xml:space="preserve">
    <value>Es wurde ein Startelement erwartet. Gefunden wurde "{0}".</value>
  </data>
  <data name="XmlFoundComment" xml:space="preserve">
    <value>Kommentar "{0}"</value>
  </data>
  <data name="XmlFoundNodeType" xml:space="preserve">
    <value>Knoten {0}</value>
  </data>
  <data name="UnknownItemXml" xml:space="preserve">
    <value>Das Element mit dem Namen '{0}' und Namespace '{1}' ist kein zulässiges Elementformat.</value>
  </data>
  <data name="ItemCreatedNullPerson" xml:space="preserve">
    <value>Das Element hat eine Null-Person erstellt.</value>
  </data>
  <data name="ItemContributorsIgnoredOnWrite" xml:space="preserve">
    <value>Die Contributors des Elements wurden nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="FeedCreatedNullCategory" xml:space="preserve">
    <value>Der Feed hat eine Null-Kategorie erstellt.</value>
  </data>
  <data name="XmlFoundText" xml:space="preserve">
    <value>Text '{0}'</value>
  </data>
  <data name="Atom10SpecRequiresTextConstruct" xml:space="preserve">
    <value>Die Atom10-Spezifikation erfordert, dass '{0}' über einen der folgenden Werte verfügt: "text", "html", "xhtml". In dem Dokument, das zurzeit deserialisiert wird, ist dieser Wert aber '{1}'.</value>
  </data>
  <data name="UriGeneratorSchemeMustNotBeEmpty" xml:space="preserve">
    <value>Der Schemaparameter darf nicht leer sein.</value>
  </data>
  <data name="UnbufferedItemsCannotBeCloned" xml:space="preserve">
    <value>Ein Feed, der Elemente enthält, die nicht gepuffert sind (d.h., dass die Elemente nicht in einer IList gespeichert sind), kann seine eigenen Elemente nicht klonen. Puffern Sie die Elemente im Feed, bevor Sie Clone dafür aufrufen, oder übergeben Sie 'false' an die Clone-Methode.</value>
  </data>
  <data name="ReadNotSupported" xml:space="preserve">
    <value>Lesen wird für diesen Stream nicht unterstützt.</value>
  </data>
  <data name="OuterElementNameNotSpecified" xml:space="preserve">
    <value>Der äußere Elementname muss angegeben werden.</value>
  </data>
  <data name="ErrorInLine" xml:space="preserve">
    <value>Fehler in Zeile {0}, Position {1}.</value>
  </data>
  <data name="XmlBufferQuotaExceeded" xml:space="preserve">
    <value>Die erforderliche Größe zum Speichern der XML-Inhalte überschreitet das Pufferkontingent. Dies wird möglicherweise durch die Übergabe eines nicht ausreichend großen Werts an den maxExtensionSize-Parameter beim Laden von Erweiterungen verursacht.</value>
  </data>
  <data name="ItemFormatterDoesNotHaveItem" xml:space="preserve">
    <value>Die Syndication-Elementformatierung muss mit einem Syndication-Element konfiguriert sein.</value>
  </data>
  <data name="XmlBufferClosed" xml:space="preserve">
    <value>Das XmlBuffer-Objekt wurde geschlossen, bevor Daten aus dem zugeordneten Stream gelesen wurden.</value>
  </data>
  <data name="FeedContributorsIgnoredOnWrite" xml:space="preserve">
    <value>Die Contributors des Feeds wurden nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="FeedLinksIgnoredOnWrite" xml:space="preserve">
    <value>Die Links des Feeds wurden nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="ItemAuthorsIgnoredOnWrite" xml:space="preserve">
    <value>Die Autoren des Elements wurden nicht im Rahmen der Serialisierung des Feeds im RSS 2.0-Format serialisiert.</value>
  </data>
  <data name="ErrorParsingItem" xml:space="preserve">
    <value>Fehler beim Analysieren des XML-Codes des Elements. Weitere Details finden Sie in der inneren Ausnahme.</value>
  </data>
  <data name="ErrorParsingFeed" xml:space="preserve">
    <value>Fehler beim Analysieren des XML-Codes des Feeds. Weitere Details finden Sie in der inneren Ausnahme.</value>
  </data>
  <data name="XmlBufferInInvalidState" xml:space="preserve">
    <value>Es ist ein interner Fehler aufgetreten. Der XML-Puffer befindet sich nicht im richtigen Status zum Ausführen des Vorgangs.</value>
  </data>
  <data name="XmlFoundCData" xml:space="preserve">
    <value>cdata "{0}"</value>
  </data>
  <data name="UnsupportedRssVersion" xml:space="preserve">
    <value>Der Rss20Serializer unterstützt die RSS-Version '{0}' nicht.</value>
  </data>
  <data name="InvalidObjectTypePassed" xml:space="preserve">
    <value>Der Typ des als Parameter '{0}' übergebenen Objekts wird nicht von {1} abgeleitet. Stellen Sie sicher, dass der Typ des übergebenen Objekts vom Typ {1} ist oder von {1} abgeleitet wird.</value>
  </data>
  <data name="ExtensionNameNotSpecified" xml:space="preserve">
    <value>Der Name des Erweiterungselements muss angegeben werden.</value>
  </data>
  <data name="ItemCreatedNullCategory" xml:space="preserve">
    <value>Das Element hat eine Null-Kategorie erstellt.</value>
  </data>
  <data name="XmlFoundEndElement" xml:space="preserve">
    <value>Endelement "{0}" aus Namespace "{1}"</value>
  </data>
</root>