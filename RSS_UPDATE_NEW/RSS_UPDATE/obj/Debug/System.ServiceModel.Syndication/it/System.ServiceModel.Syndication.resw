<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="XmlFoundEndOfFile" xml:space="preserve">
    <value>fine del file</value>
  </data>
  <data name="UnknownFeedXml" xml:space="preserve">
    <value>L'elemento con nome '{0}' e spazio dei nomi '{1}' non è un formato di feed consentito.</value>
  </data>
  <data name="ErrorParsingDateTime" xml:space="preserve">
    <value>Errore durante l'analisi di un valore DateTime in XML.</value>
  </data>
  <data name="ValueMustBeNonNegative" xml:space="preserve">
    <value>Il valore dell'argomento non deve essere negativo.</value>
  </data>
  <data name="FeedCreatedNullPerson" xml:space="preserve">
    <value>Il feed ha creato una persona Null.</value>
  </data>
  <data name="FeedCreatedNullItem" xml:space="preserve">
    <value>Il feed ha creato un elemento Null.</value>
  </data>
  <data name="ItemLinksIgnoredOnWrite" xml:space="preserve">
    <value>Collegamenti dell'elemento non serializzati come parte della serializzazione in formato RSS 2.0.</value>
  </data>
  <data name="SeekNotSupported" xml:space="preserve">
    <value>Ricerca non supportata nel flusso.</value>
  </data>
  <data name="FeedIdIgnoredOnWrite" xml:space="preserve">
    <value>ID del feed non serializzato come parte della serializzazione del feed in formato RSS 2.0.</value>
  </data>
  <data name="FeedFormatterDoesNotHaveFeed" xml:space="preserve">
    <value>Il formattatore del feed di diffusione deve essere configurato con un feed di diffusione.</value>
  </data>
  <data name="ItemLastUpdatedTimeIgnoredOnWrite" xml:space="preserve">
    <value>Ultimo tempo aggiornato dell'elemento non serializzato come parte della serializzazione in formato RSS 2.0.</value>
  </data>
  <data name="ItemContentIgnoredOnWrite" xml:space="preserve">
    <value>Contenuto dell'elemento non serializzato come parte della serializzazione del feed in formato RSS 2.0.</value>
  </data>
  <data name="ItemCopyrightIgnoredOnWrite" xml:space="preserve">
    <value>Copyright dell'elemento non serializzati come parte della serializzazione del feed in formato RSS 2.0.</value>
  </data>
  <data name="XmlFoundElement" xml:space="preserve">
    <value>elemento '{0}' dallo spazio dei nomi '{1}'</value>
  </data>
  <data name="FeedHasNonContiguousItems" xml:space="preserve">
    <value>Il feed da deserializzare contiene set di elementi non contigui. Operazione non supportata da '{0}'.</value>
  </data>
  <data name="JsonInvalidLocalNameEmpty" xml:space="preserve">
    <value>La stringa vuota non è un nome locale valido.</value>
  </data>
  <data name="FeedAuthorsIgnoredOnWrite" xml:space="preserve">
    <value>Autori del feed non serializzati come parte della serializzazione del feed in formato RSS 2.0.</value>
  </data>
  <data name="XmlStartElementExpected" xml:space="preserve">
    <value>Previsto elemento iniziale. Trovato {0}.</value>
  </data>
  <data name="XmlFoundComment" xml:space="preserve">
    <value>commento '{0}'</value>
  </data>
  <data name="XmlFoundNodeType" xml:space="preserve">
    <value>nodo {0}</value>
  </data>
  <data name="UnknownItemXml" xml:space="preserve">
    <value>L'elemento con nome '{0}' e spazio dei nomi '{1}' non è un formato di elemento consentito.</value>
  </data>
  <data name="ItemCreatedNullPerson" xml:space="preserve">
    <value>L'elemento ha creato una persona Null.</value>
  </data>
  <data name="ItemContributorsIgnoredOnWrite" xml:space="preserve">
    <value>Collaboratori dell'elemento non serializzati come parte della serializzazione del feed in formato RSS 2.0.</value>
  </data>
  <data name="FeedCreatedNullCategory" xml:space="preserve">
    <value>Il feed ha creato una categoria Null.</value>
  </data>
  <data name="XmlFoundText" xml:space="preserve">
    <value>testo '{0}'</value>
  </data>
  <data name="Atom10SpecRequiresTextConstruct" xml:space="preserve">
    <value>La specifica Atom10 richiede '{0}' per avere uno dei seguenti valori: "text", "html", "xhtml", tuttavia questo valore è '{1}' nel documento da deserializzare.</value>
  </data>
  <data name="UriGeneratorSchemeMustNotBeEmpty" xml:space="preserve">
    <value>Il parametro dello schema non deve essere vuoto.</value>
  </data>
  <data name="UnbufferedItemsCannotBeCloned" xml:space="preserve">
    <value>Un feed contenente elementi non memorizzati nel buffer (ossia elementi non memorizzati in IList) non può duplicare i propri elementi. Memorizzare nel buffer gli elementi nel feed prima della duplicazione o impostare il metodo di duplicazione su False.</value>
  </data>
  <data name="ReadNotSupported" xml:space="preserve">
    <value>Lettura non supportata nel flusso.</value>
  </data>
  <data name="OuterElementNameNotSpecified" xml:space="preserve">
    <value>Specificare il nome dell'elemento esterno.</value>
  </data>
  <data name="ErrorInLine" xml:space="preserve">
    <value>Errore alla riga {0} posizione {1}.</value>
  </data>
  <data name="XmlBufferQuotaExceeded" xml:space="preserve">
    <value>La dimensione necessaria per inserire nel buffer il contenuto XML supera la quota di buffer. Ciò potrebbe essere causato dal passaggio di un valore insufficientemente grande al parametro maxExtensionSize durante il caricamento delle estensioni.</value>
  </data>
  <data name="ItemFormatterDoesNotHaveItem" xml:space="preserve">
    <value>Il formattatore dell'elemento di diffusione deve essere configurato con un elemento di diffusione.</value>
  </data>
  <data name="XmlBufferClosed" xml:space="preserve">
    <value>Oggetto XmlBuffer chiuso prima della lettura dei dati da parte dello Stream associato.</value>
  </data>
  <data name="FeedContributorsIgnoredOnWrite" xml:space="preserve">
    <value>Collaboratori del feed non serializzati come parte della serializzazione del feed in formato RSS 2.0.</value>
  </data>
  <data name="FeedLinksIgnoredOnWrite" xml:space="preserve">
    <value>Collegamenti del feed non serializzati come parte della serializzazione del feed in formato RSS 2.0.</value>
  </data>
  <data name="ItemAuthorsIgnoredOnWrite" xml:space="preserve">
    <value>Autori dell'elemento non serializzati come parte della serializzazione del feed in formato RSS 2.0.</value>
  </data>
  <data name="ErrorParsingItem" xml:space="preserve">
    <value>Errore durante l'analisi di XML dell'elemento. Fare riferimento all'eccezione interna per maggiori dettagli.</value>
  </data>
  <data name="ErrorParsingFeed" xml:space="preserve">
    <value>Errore durante l'analisi di XML del feed. Fare riferimento all'eccezione interna per maggiori dettagli.</value>
  </data>
  <data name="XmlBufferInInvalidState" xml:space="preserve">
    <value>Errore interno. Il buffer XML non si trova nello stato appropriato per eseguire l'operazione.</value>
  </data>
  <data name="XmlFoundCData" xml:space="preserve">
    <value>cdata '{0}'</value>
  </data>
  <data name="UnsupportedRssVersion" xml:space="preserve">
    <value>Rss20Serializer non supporta la versione RSS '{0}'.</value>
  </data>
  <data name="InvalidObjectTypePassed" xml:space="preserve">
    <value>Il tipo di oggetto passato come parametro '{0}' non è derivato da {1}. Assicurarsi che il tipo di oggetto passato sia di tipo {1} o derivato da {1}.</value>
  </data>
  <data name="ExtensionNameNotSpecified" xml:space="preserve">
    <value>Specificare il nome dell'elemento di estensione.</value>
  </data>
  <data name="ItemCreatedNullCategory" xml:space="preserve">
    <value>L'elemento ha creato una categoria Null.</value>
  </data>
  <data name="XmlFoundEndElement" xml:space="preserve">
    <value>elemento finale '{0}' dallo spazio dei nomi '{1}'</value>
  </data>
</root>