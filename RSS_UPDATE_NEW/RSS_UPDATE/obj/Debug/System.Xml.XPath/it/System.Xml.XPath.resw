<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Xp_InvalidNumArgs" xml:space="preserve">
    <value>Numero degli argomenti della funzione '{0}' in '{1}' non valido.</value>
  </data>
  <data name="Xp_BadQueryObject" xml:space="preserve">
    <value>Oggetto non valido. Solo gli oggetti restituiti da Compile() possono essere passati come input.</value>
  </data>
  <data name="Xp_CurrentNotAllowed" xml:space="preserve">
    <value>La funzione 'current()' non può essere utilizzata in un modello.</value>
  </data>
  <data name="Xml_BadNameChar" xml:space="preserve">
    <value>Il carattere '{0}', valore esadecimale {1}, non può essere utilizzato in un nome.</value>
  </data>
  <data name="Xml_EmptyName" xml:space="preserve">
    <value>La stringa vuota '' non è un nome valido.</value>
  </data>
  <data name="Xml_UserException" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="Xpn_BadPosition" xml:space="preserve">
    <value>Operazione non valida a causa della posizione corrente dello strumento di selezione.</value>
  </data>
  <data name="Xp_UndefVar" xml:space="preserve">
    <value>La variabile '{0}' non è definita.</value>
  </data>
  <data name="XmlUndefinedAlias" xml:space="preserve">
    <value>Prefisso dello spazio dei nomi '{0}' non definito.</value>
  </data>
  <data name="NotSupported_MoveToId" xml:space="preserve">
    <value>Questo XPathNavigator non supporta ID.</value>
  </data>
  <data name="Xp_UndefinedXsltContext" xml:space="preserve">
    <value>XsltContext necessario per la query a causa di una funzione sconosciuta.</value>
  </data>
  <data name="Xml_BadStartNameChar" xml:space="preserve">
    <value>Un nome non può iniziare con il carattere '{0}', valore esadecimale {1}.</value>
  </data>
  <data name="Xp_InvalidToken" xml:space="preserve">
    <value>'{0}' ha un token non valido.</value>
  </data>
  <data name="InvalidOperation_UnexpectedEvaluation" xml:space="preserve">
    <value>L'espressione XPath ha restituito il tipo non previsto {0}.</value>
  </data>
  <data name="Xp_FunctionFailed" xml:space="preserve">
    <value>Funzione '{0}()' non riuscita.</value>
  </data>
  <data name="InvalidOperation_BadNodeType" xml:space="preserve">
    <value>Questa operazione non è valida in un nodo di tipo {0}.</value>
  </data>
  <data name="Xp_NoContext" xml:space="preserve">
    <value>Richiesto gestore dello spazio dei nomi o XsltContext. Query con prefisso, variabile o funzione definita dall'utente.</value>
  </data>
  <data name="Sch_EnumFinished" xml:space="preserve">
    <value>L'enumerazione è già terminata.</value>
  </data>
  <data name="Xp_UndefFunc" xml:space="preserve">
    <value>La funzione '{0}()' non è definita.</value>
  </data>
  <data name="Xp_NotSupported" xml:space="preserve">
    <value>Query XPath '{0}' non supportata.</value>
  </data>
  <data name="Argument_CreateNavigator" xml:space="preserve">
    <value>Impossibile creare questo XPathNavigator in un nodo di tipo {0}.</value>
  </data>
  <data name="Xp_InvalidArgumentType" xml:space="preserve">
    <value>Impossibile convertire in un set di nodi l'argomento della funzione '{0}' in '{1}'.</value>
  </data>
  <data name="Xp_InvalidKeyPattern" xml:space="preserve">
    <value>Modello di chiave '{0}' non valido. Contiene un riferimento a una variabile o una funzione 'key()'.</value>
  </data>
  <data name="Xp_UnclosedString" xml:space="preserve">
    <value>Stringa non risolta.</value>
  </data>
  <data name="Xp_InvalidPattern" xml:space="preserve">
    <value>'{0}' è un modello XSLT non valido.</value>
  </data>
  <data name="Xml_InvalidOperation" xml:space="preserve">
    <value>Operazione non valida a causa dello stato corrente dell'oggetto.</value>
  </data>
  <data name="Xp_ExprExpected" xml:space="preserve">
    <value>'{0}' è un'espressione non valida.</value>
  </data>
  <data name="Xp_NodeSetExpected" xml:space="preserve">
    <value>L'espressione deve restituire un set di nodi.</value>
  </data>
  <data name="Xp_InvalidName" xml:space="preserve">
    <value>'{0}' ha un nome completo non valido.</value>
  </data>
  <data name="Sch_EnumNotStarted" xml:space="preserve">
    <value>Enumerazione non avviata. Chiamare MoveNext.</value>
  </data>
</root>